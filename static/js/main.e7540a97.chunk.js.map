{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Certificate.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","url","target","Component","About","src","alt","aboutme","email","phone","Resume","skillsDescription","class","skills","skillexpert","skillscoding","skillname","softskills","softskill","Porfolio","portfolio","imgurl","description","Certificate","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMACqBA,E,uKAEjB,IAAIC,EAAaC,KAAKC,MAAMF,WAC5B,OACE,cAAC,IAAMG,SAAP,UAEA,yBAAQC,GAAG,OAAX,UACG,sBAAKA,GAAG,WAAR,UACG,mBAAGC,UAAU,aAAaC,KAAK,YAAYC,MAAM,kBAAjD,6BACF,mBAAGF,UAAU,aAAaC,KAAK,IAAIC,MAAM,kBAAzC,6BACE,qBAAIH,GAAG,MAAMC,UAAU,MAAvB,UACG,oBAAIA,UAAU,UAAd,SAAwB,mBAAGA,UAAU,eAAeC,KAAK,QAAjC,oBACxB,6BAAI,mBAAGD,UAAU,eAAeC,KAAK,SAAjC,qBACN,6BAAI,mBAAGD,UAAU,eAAeC,KAAK,UAAjC,sBACF,6BAAI,mBAAGD,UAAU,eAAeC,KAAK,aAAjC,qBACJ,6BAAI,mBAAGD,UAAU,eAAeC,KAAK,eAAjC,iCAIV,qBAAKD,UAAU,aAAf,SACG,sBAAKA,UAAU,cAAf,UACG,qBAAIA,UAAU,sBAAd,kBAA0CL,EAAWQ,KAArD,OACA,qBAAIC,MAAO,CAACC,MAAM,OAAQC,WAAW,eAArC,oBAA6DX,EAAWY,KAAxE,IAA+EZ,EAAWa,mBAE1F,uBACA,oBAAIR,UAAU,SAAd,SAEKL,EAAWc,aAAed,EAAWc,YAAYC,KAAI,SAAAC,GACnD,OACQ,6BACE,mBAAGV,KAAMU,EAAKC,IAAKC,OAAO,SAA1B,SAAmC,mBAAGb,UAAWW,EAAKX,eAD/CW,EAAKR,gBAWnC,mBAAGH,UAAU,aAAb,SACG,mBAAGA,UAAU,eAAeC,KAAK,SAAjC,SAA0C,mBAAGD,UAAU,kC,GAzC/Bc,aCAfC,E,uKAEjB,IAAIpB,EAAaC,KAAKC,MAAMF,WAC5B,OACE,yBAASI,GAAG,QAAZ,SACG,sBAAKC,UAAU,MAAf,UAEG,qBAAKA,UAAU,gBAAf,SAEG,qBAAKA,UAAU,cAAegB,IAAI,kBAAkBC,IAAI,OAI3D,sBAAKjB,UAAU,wBAAf,UAEG,0CACA,4BAEEL,EAAWuB,UAIb,qBAAKlB,UAAU,MAAf,SAEG,sBAAKA,UAAU,0BAAf,UAEA,iDACA,oBAAGA,UAAU,UAAb,UACL,+BAAOL,EAAWQ,OACV,uBACL,+BACMR,EAAWwB,QAEb,uBACA,+BAAOxB,EAAWyB,4B,GAlCHN,aCAbO,E,uKAElB,IAAI1B,EAAaC,KAAKC,MAAMF,WAC5B,OACE,yBAASI,GAAG,SAAZ,SAGG,sBAAKC,UAAU,YAAf,UAEG,qBAAKA,UAAU,2BAAf,SACG,6BAAI,8CAGP,sBAAKA,UAAU,wBAAf,UAEG,4BACCL,EAAW2B,oBAEjB,8BACH,sBAAKtB,UAAU,MAAf,UACI,qBAAKuB,MAAM,SAAX,SAED,oBAAIvB,UAAU,SAAd,SAEQL,EAAW6B,QAAU7B,EAAW6B,OAAOd,KAAI,SAACC,GAC1C,OACE,6BACA,6BAAKA,EAAKc,uBAQpB,qBAAKF,MAAM,SAAX,SAEF,oBAAIvB,UAAU,SAAd,SAEQL,EAAW+B,cAAgB/B,EAAW+B,aAAahB,KAAI,SAACC,GACtD,OACE,6BACA,6BAAKA,EAAKgB,qBAQpB,qBAAKJ,MAAM,SAAX,SACF,oBAAIvB,UAAU,SAAd,SAEQL,EAAWiC,YAAcjC,EAAWiC,WAAWlB,KAAI,SAACC,GAClD,OACE,6BACA,6BAAKA,EAAKkB,sC,GAxDKf,aCAhBgB,E,uKAEjB,IAAInC,EAAaC,KAAKC,MAAMF,WAC5B,OACE,yBAASI,GAAG,YAAYwB,MAAM,YAA9B,SACA,qBAAKvB,UAAU,MAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,6DACA,qBAAKD,GAAG,oBAAoBC,UAAU,mCAAtC,SAEEL,EAAWoC,WAAapC,EAAWoC,UAAUrB,KAAI,SAACC,GAChD,OACE,qBAAKX,UAAU,yBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAGC,KAAMU,EAAKC,IAAd,UACE,qBAAKI,IAAG,UAAKL,EAAKqB,QAAUhC,UAAU,aACtC,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,6BAAKW,EAAKR,OACV,4BAAIQ,EAAKsB,0C,GAnBGnB,aCAjBoB,E,uKAEjB,IAAIvC,EAAaC,KAAKC,MAAMF,WAC5B,OACE,yBAASI,GAAG,cAAcwB,MAAM,YAAhC,SACA,sBAAKvB,UAAU,MAAf,UAGO,qBAAKA,UAAU,2BAAf,SACE,6BAAI,mDAIT,qBAAKD,GAAG,oBAAoBC,UAAU,mCAAtC,SAEEL,EAAWuC,aAAevC,EAAWuC,YAAYxB,KAAI,SAACC,GACpD,OACE,qBAAKX,UAAU,yBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,8BACE,qBAAKgB,IAAG,UAAKL,EAAKqB,QAAUhC,UAAU,aACtC,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,6BAAKW,EAAKR,OACV,4BAAIQ,EAAKsB,wC,GAxBMnB,aCApBqB,E,uKAEjB,IAAIxC,EAAaC,KAAKC,MAAMF,WAC5B,OACE,iCACA,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,oBAAIA,UAAU,eAAd,SAEIL,EAAWc,aAAed,EAAWc,YAAYC,KAAI,SAACC,GACpD,OACE,6BACE,mBAAGV,KAAMU,EAAKC,IAAd,SACA,mBAAGZ,UAAWW,EAAKX,uBAS/B,qBAAKD,GAAG,SAAR,SAAiB,mBAAGC,UAAU,eAAeE,MAAM,cAAcD,KAAK,QAArD,SAA6D,mBAAGD,UAAU,8B,GAtB/Dc,aCuGnBnB,EAxGA,CACb,KAAQ,gBACR,KAAQ,wCACR,WAAa,mBACb,QAAW,eACX,gBAAmB,2IACnB,YAAc,CACV,CACE,KAAO,WACP,IAAM,wDACN,UAAY,kBAEd,CACE,KAAO,SACP,IAAM,6BACN,UAAY,gBAEd,CACE,KAAO,QACP,IAAM,mCACN,UAAY,kBAGlB,QAAU,2TACV,MAAQ,+BACR,MAAQ,eAER,aAAe,CACb,CACE,UAAY,SAEd,CACE,UAAY,OAEd,CACE,UAAY,OAEd,CACE,UAAY,WAEd,CACE,UAAY,SAEd,CACE,UAAY,WAGhB,OAAS,CACP,CACE,YAAc,iBAEhB,CACE,YAAc,kBAEhB,CACE,YAAc,iBAGlB,WAAa,CACX,CACE,UAAY,aAEd,CACE,UAAY,sBAEd,CACE,UAAY,oBAGhB,UAAY,CACV,CACE,KAAO,WACP,YAAc,iBACd,IAAM,oCACN,OAAS,0BAEX,CACE,KAAO,WACP,YAAc,oDACd,IAAM,2CACN,OAAS,2BAKb,YAAc,CACZ,CACE,KAAO,kCACP,YAAc,mBACd,OAAS,4BAEX,CACE,KAAO,oBACP,YAAc,6BACd,OAAS,0CAEX,CACE,KAAO,gBACP,YAAc,gDACd,OAAS,+BC1EFyC,G,6KAbX,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQL,WAAYA,IACpB,cAAC,EAAD,CAAOA,WAAYA,IACnB,cAAC,EAAD,CAAQA,WAAYA,IACpB,cAAC,EAAD,CAAWA,WAAYA,IACvB,cAAC,EAAD,CAAaA,WAAYA,IACzB,cAAC,EAAD,CAAQA,WAAYA,W,GATVmB,cCEEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e7540a97.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#certificate\">sertificate</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/poto.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.email}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.phone}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n\n         <div className=\"row skill\" >\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n          <div>\n   \t\t\t\t<div className=\"row\">\n           <div class=\"column\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <em>{item.skillexpert}</em>\n                      </li>\n                    )\n                  })\n                }\n   \t\t\t\t\t</ul>\n            </div>\n\n            <div class=\"column\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skillscoding && resumeData.skillscoding.map((item) => {\n                    return(\n                      <li>\n                      <em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n   \t\t\t\t\t</ul>\n            </div>\n\n            <div class=\"column\">\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.softskills && resumeData.softskills.map((item) => {\n                    return(\n                      <li>\n                      <em>{item.softskill}</em>\n                      </li>\n                    )\n                  })\n                }\n   \t\t\t\t\t</ul>\n            </div>\n            </div>\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\" class=\"container\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href={item.url}>\n                      <img src={`${item.imgurl}`} className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\r\nexport default class Certificate extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"certificate\" class=\"container\">\r\n      <div className=\"row\">\r\n\r\n\r\n             <div className=\"three columns header-col\">\r\n               <h1><span>Certificate</span></h1>\r\n            </div>\r\n\r\n\r\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n          {\r\n            resumeData.Certificate && resumeData.Certificate.map((item)=>{\r\n              return(\r\n                <div className=\"columns portfolio-item\">\r\n                  <div className=\"item-wrap\">\r\n                    <a>\r\n                      <img src={`${item.imgurl}`} className=\"item-img\"/>\r\n                      <div className=\"overlay\">\r\n                        <div className=\"portfolio-item-meta\">\r\n                          <h5>{item.name}</h5>\r\n                          <p>{item.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        </div>\r\n      \r\n  </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"name\": \"Muhamad Ardhi\",\n    \"role\": \"Frontend Developer and Data Scientist\",\n    \"linkedinId\":\"Your LinkedIn Id\",\n    \"skypeid\": \"Your skypeid\",\n    \"roleDescription\": \"I like dabbling in various parts of frontend development and like to learn about new technologies, or simply play games in my free time.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/muhamad-ardhi-7131111a3//\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/godhi06\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"skype\",\n          \"url\":\"https://twitter.com/ardhidosq461\",\n          \"className\":\"fa fa-twitter\"\n        }\n      ],\n    \"aboutme\":\"Muhamad Ardhi is a fresh graduate his Bachelor in Informatics of Telkom University. he is a possesses enthusiasm in web developer and data scientist, currently diving deeper into Machine Learning. He has received several certifications and training in the fields of web developer, machine learning, and google go\",\n    \"email\":\"muhamadardhi090598@gmail.com\",\n    \"phone\":\"082297302001\",\n    \n    \"skillscoding\":[\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"PHP\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      },\n      {\n        \"skillname\":\"MySQL\"\n      },\n      {\n        \"skillname\":\"Python\"\n      }\n    ],\n    \"skills\":[\n      {\n        \"skillexpert\":\"Web Developer\"\n      },\n      {\n        \"skillexpert\":\"Data Scientist\"\n      },\n      {\n        \"skillexpert\":\"Data Analyst\"\n      }\n    ],\n    \"softskills\":[\n      {\n        \"softskill\":\"Hard Work\"\n      },\n      {\n        \"softskill\":\"Respectful of Time\"\n      },\n      {\n        \"softskill\":\"Team Leadership\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"project1\",\n        \"description\":\"AplikasiLondri\",\n        \"url\":\"https://github.com/godhi06/londri\",\n        \"imgurl\":\"images/portfolio/2.PNG\"\n      },\n      {\n        \"name\":\"project2\",\n        \"description\":\"Information System PDAM city of Tegal Application\",\n        \"url\":\"https://github.com/godhi06/pdamkotategal\",\n        \"imgurl\":\"images/portfolio/1.PNG\"\n      }\n    ],\n\n\n    \"Certificate\":[\n      {\n        \"name\":\"Machine Learning Specialization\",\n        \"description\":\"Machine Learning\",\n        \"imgurl\":\"images/sertifikat/ML.PNG\"\n      },\n      {\n        \"name\":\"Go Specialization\",\n        \"description\":\"Programming with Google Go\",\n        \"imgurl\":\"images/sertifikat/GoSpecialization.PNG\"\n      },\n      {\n        \"name\":\"Web Developer\",\n        \"description\":\"PHTML, CSS, and Javascript for Web Developers\",\n        \"imgurl\":\"images/sertifikat/Web.PNG\"\n      },\n    ],\n  }\n  \n  export default resumeData\n\n\n  ","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Certificate from './components/Certificate';\n\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Certificate resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}